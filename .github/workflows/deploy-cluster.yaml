name: Deploy EKS and Create Namespace

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      # Ensure DynamoDB table exists
      - name: Ensure DynamoDB Lock Table Exists
        run: |
          TABLE_NAME="joseph03-cap-eks-terraform-locks"
          REGION="us-east-1"

          if ! aws dynamodb describe-table --table-name $TABLE_NAME --region $REGION >/dev/null 2>&1; then
            echo "Creating DynamoDB table: $TABLE_NAME"
            aws dynamodb create-table \
              --table-name $TABLE_NAME \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --billing-mode PAY_PER_REQUEST \
              --region $REGION
            echo "Waiting for table to be active..."
            aws dynamodb wait table-exists --table-name $TABLE_NAME --region $REGION
            echo "DynamoDB table $TABLE_NAME is ready."
          else
            echo "DynamoDB table $TABLE_NAME already exists."
          fi

      # Terraform init
      - name: Terraform Init
        run: terraform init

      # - name: Terraform Init
      #   run: terraform init -backend-config="region=us-east-1"
      #    -backend-config="dynamodb_table=joseph03-cap-eks-terraform-locks" -backend-config="encrypt=true"

      # Check formatting
      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      # Validate configuration
      - name: Terraform Validate
        run: terraform validate

      # Run Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan.out

      # Apply only on main branch or manual trigger
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve tfplan.out

      - name: Set CLUSTER_NAME
        run: |
          CLUSTER_NAME=$(terraform output -raw cluster_name 2>/dev/null)
          echo "CLUSTER_NAME=$CLUSTER_NAME"
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> "$GITHUB_ENV"

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name "$CLUSTER_NAME"

      - name: Create Namespace in EKS Cluster
        run: |
          kubectl create namespace ecommerce-app || echo "Namespace already exists"
