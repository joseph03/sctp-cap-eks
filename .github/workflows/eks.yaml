name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 05-external-dns
  pull_request:
    branches:
      - main
      - 05-external-dns
  workflow_dispatch:

env:
  env-s3-name: "grp-3joseph03-s3"                  # "grp-3${local.name_prefix}s3"
  env-dynamodb-name: "grp-3joseph03-dynamodb"      # "grp-3${local.name_prefix}dynamodb"

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Check Terraform Format
        run: terraform fmt -check -recursive

      - name: Check Terraform Format (bootstrap-s3)
        working-directory: ./bootstrap-s3
        run: terraform fmt -check -recursive

#================== bootstrap-s3 ==================
      - name: Terraform Init (bootstrap-s3)
        working-directory: ./bootstrap-s3
        run: terraform init

      - name: Validate Terraform (bootstrap-s3)
        working-directory: ./bootstrap-s3
        run: terraform validate

      - name: Check S3 bucket existence
        id: check_s3
        run: |
          if aws s3api head-bucket --bucket "$var-s3-name" 2>/dev/null; then
            echo "s3_exists=true" >> $GITHUB_OUTPUT
          else
            echo "s3_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Plan (bootstrap-s3)
        working-directory: ./bootstrap-s3
        if: steps.check_s3.outputs.s3_exists == 'false' 
        run: terraform apply -out=tfplan -var="s3_name=${env-s3-name}"

      - name: Terraform Apply (bootstrap-s3)
        working-directory: ./bootstrap-s3
        if: steps.check_s3.outputs.s3_exists == 'false' 
        run: terraform apply tfplan

#==================== bootstrap-dynamodb ==================
      - name: Terraform Init (bootstrap-dynamodb)
        working-directory: ./bootstrap-dynamodb
        run: terraform init

      - name: Validate Terraform (bootstrap-dynamodb)
        working-directory: ./bootstrap-dynamodb
        run: terraform validate

      - name: Check DynamoDB table existence
        id: check_dynamodb
        run: |
          if aws dynamodb describe-table --table-name "$var-dynamodb-name" 2>/dev/null; then
            echo "dynamodb_exists=true" >> $GITHUB_OUTPUT
          else
            echo "dynamodb_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Plan (bootstrap-dynamodb)
        working-directory: ./bootstrap-dynamodb
        if: steps.check_dynamodb.outputs.dynamodb_exists == 'false' 
        run: terraform apply -out=tfplan -var="dynamodb_name=${env-dynamodb-name}"

      - name: Terraform Apply (bootstrap-dynamodb)
        working-directory: ./bootstrap-dynamodb
        if: steps.check_dynamodb.outputs.dynamodb_exists == 'false' 
        run: terraform apply tfplan

#================== vpc & eks ==================
      - name: Terraform Init (root)
        run: terraform init

      - name: Validate Terraform (root)
        run: terraform validate
        
      - name: Terraform Plan with Target (VPC & EKS)
        id: targeted_plan
        run: terraform plan -out=tfplan -target=module.vpc -target=module.eks

      - name: Terraform Apply Targeted Plan
        run: terraform apply -auto-approve tfplan

#================== ingress, externa-dns, namespaces =================
      - name: Terraform Full Plan
        id: full_plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply Full Plan
        run: terraform apply -auto-approve tfplan

      - name: Show Full Plan
        id: show_plan
        run: terraform show -no-color tfplan > plan_output.txt

      - name: Comment Terraform Plan on PR
        if: github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message-path: plan_output.txt
